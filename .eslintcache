[{"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Redux/rootReducer.js":"1","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Redux/actions.js":"2","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/reportWebVitals.js":"3","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Components/Navbar.js":"4","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/index.js":"5","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Components/Header.js":"6","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/History/history.js":"7","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/App.js":"8","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Redux/actionTypes.js":"9","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Components/EventDetails.js":"10"},{"size":1664,"mtime":1609962616123,"results":"11","hashOfConfig":"12"},{"size":5222,"mtime":1610070934106,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608739515451,"results":"14","hashOfConfig":"12"},{"size":2291,"mtime":1610082003225,"results":"15","hashOfConfig":"12"},{"size":960,"mtime":1610001110667,"results":"16","hashOfConfig":"12"},{"size":793,"mtime":1610003848510,"results":"17","hashOfConfig":"12"},{"size":84,"mtime":1609894674640,"results":"18","hashOfConfig":"12"},{"size":1360,"mtime":1610009358922,"results":"19","hashOfConfig":"12"},{"size":275,"mtime":1609922767784,"results":"20","hashOfConfig":"12"},{"size":6305,"mtime":1610072957365,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"nfnh9j",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Redux/rootReducer.js",["44","45","46","47","48","49","50","51","52"],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Redux/actions.js",["53","54"],"import actionTypes from './actionTypes';\nimport history from '../History/history'\nimport { withRouter } from 'react-router-dom'\n\n\n\nexport function initialFetch(zipcode) {\n    const api = process.env.REACT_APP_API_KEY\n    let URL = \"\"\n    // console.log(\"BBBBbBBBB\", zipcode)\n    if (zipcode) {\n        URL = `https://app.ticketmaster.com/discovery/v2/events.json?postalCode=${zipcode}&locale=*&countryCode=US&segmentName=music&apikey=${api}`\n    }\n    else {\n        URL = `https://app.ticketmaster.com/discovery/v2/events.json?city=New%20York&countryCode=US&segmentName=music&apikey=${api}`\n    }\n    return function (dispatch) {\n        // console.log(URL)\n        fetch(URL)\n            .then(response => response.json())\n            .then(eventsData => {\n                console.log(\"eventsData\", eventsData[\"_embedded\"])\n                if (eventsData[\"_embedded\"]) {\n\n                    const convertedData = convertTicketMaster(eventsData[\"_embedded\"].events)\n                    dispatch({ type: actionTypes.initialFetch, payload: convertedData })\n                    // console.log(eventsData[\"_embedded\"])\n                }\n                else {\n                    dispatch({ type: actionTypes.noEvent, payload: null })\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nfunction convertTicketMaster(array) {\n    let newArr = []\n    array.forEach(eventObj => {\n        console.log(\"CONVERTER\", eventObj[\"_embedded\"].venues[0].address[\"line1\"])\n        let artistName\n        if (eventObj[\"_embedded\"].attractions) {\n            artistName = eventObj[\"_embedded\"].attractions.map(artist => artist.name)\n        }\n        else {\n            artistName = []\n        }\n\n        let thisImage = findBiggestImage(eventObj.images)\n\n        let obj = {\n            ticketmasterid: eventObj.id,\n            title: eventObj.name,\n            image: thisImage,\n            artists: artistName,\n            date: eventObj.dates.start[\"localDate\"],\n            time: eventObj.dates.start[\"localTime\"],\n            url: eventObj.url,\n            venue: eventObj[\"_embedded\"].venues[0].name,\n            address: eventObj[\"_embedded\"].venues[0].address[\"line1\"],\n            city: eventObj[\"_embedded\"].venues[0].city.name,\n            state: eventObj[\"_embedded\"].venues[0].state.name,\n            zipcode: eventObj[\"_embedded\"].venues[0].postalCode\n        }\n        newArr.push(obj)\n    })\n    return newArr\n}\n\nfunction findBiggestImage(array){\n    let width = 0\n    let url = \"\"\n\n    array.forEach(eventObj =>{\n       \n        if(parseInt(eventObj.width) > width){\n            width = eventObj.width;\n            url = eventObj.url;\n        }\n    })\n    \n    return url\n}\n\n\nexport function setUser(userObj, history) {\n    console.log(\"INSIDE SET USER USEROBJ\", userObj)\n    return function (dispatch) {\n        fetch('http://localhost:3000/api/login', {\n            method: \"POST\",\n            headers: {\n                accepts: \"application/json\",\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({ user: userObj })\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"LOCAL STORAGE\", data)\n                localStorage.setItem(\"token\", data.jwt)\n                localStorage.setItem(\"user_id\", data.user.id)\n                dispatch({ type: actionTypes.setUser, payload: data })\n                history.push(\"/get_events\")\n\n                return fetch(`http://localhost:3000/api/users/${data.user.id}`)\n                    .then(r => r.json())\n                    .then(userData => {\n                        console.log(\"Inside login - UserDataEvents:\", userData.events)\n                        dispatch({ type: actionTypes.makeFavorites, payload: userData.events})\n                        // localStorage.setItem(\"savedEvents\", userData.events)\n                    })\n                    \n            })\n            .catch(console.log)\n\n\n    }\n}\n\nexport function updateUser(userObj) {\n    console.log(\"UPDATE USER:\", userObj)\n    return function (dispatch) {\n        dispatch({ type: actionTypes.updateUser, payload: userObj })\n  \n        return fetch(`http://localhost:3000/api/users/${userObj.user.id}`)\n                    .then(r => r.json())\n                    .then(userData => {\n                        console.log(\"Inside Update User - UserDataEvents:\", userData.events)\n                        dispatch({ type: actionTypes.makeFavorites, payload: userData.events})\n                        \n                        // localStorage.setItem(\"savedEvents\", userData.events)\n                    })\n    }\n}\n\nexport function initializeSavedEvents(events) {\n    console.log(\"INSIDE ADDFAVORITE\",events)\n    return function (dispatch) {\n        dispatch({ type: actionTypes.makeFavorites, payload: events})\n    }\n}\n\nexport function addFavorite(eventObj) {\n    console.log(\"INSIDE ADDFAVORITE\",eventObj)\n    return function (dispatch) {\n        dispatch({ type: actionTypes.addFavorite, payload: eventObj })\n    }\n}\n\nexport function deleteFavorite(eventObj) {\n    return function (dispatch) {\n        dispatch({ type: actionTypes.deleteFavorite, payload: eventObj.id })\n    }\n}\n\n\n","/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/reportWebVitals.js",[],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Components/Navbar.js",[],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/index.js",[],["55","56"],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Components/Header.js",["57"],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/History/history.js",[],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/App.js",["58"],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Redux/actionTypes.js",[],"/Users/kguerra/Flatiron/code/Mod4/Project/Eventmaster-frontend/src/Components/EventDetails.js",["59"],{"ruleId":"60","severity":1,"message":"61","line":15,"column":13,"nodeType":"62","messageId":"63","endLine":15,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":20,"column":13,"nodeType":"62","messageId":"63","endLine":20,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":31,"column":13,"nodeType":"62","messageId":"63","endLine":31,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":34,"column":13,"nodeType":"62","messageId":"63","endLine":34,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":37,"column":13,"nodeType":"62","messageId":"63","endLine":37,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":48,"column":13,"nodeType":"62","messageId":"63","endLine":48,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":51,"column":13,"nodeType":"62","messageId":"63","endLine":51,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":55,"column":13,"nodeType":"62","messageId":"63","endLine":55,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":58,"column":13,"nodeType":"62","messageId":"63","endLine":58,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":15},{"ruleId":"64","severity":1,"message":"68","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":20},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"64","severity":1,"message":"73","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":17},{"ruleId":"64","severity":1,"message":"74","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":138,"column":25,"nodeType":"77","endLine":138,"endColumn":94},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'history' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'NavLink' is defined but never used.","'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]